{"version":3,"sources":["components/Sidebar.js","components/Header.js","components/ResultExtrapolate.js","components/AddCreditCard.js","components/Basic.js","components/Activation.js","helpers/separateCreditCard.js","helpers/similitude.js","components/Similutude.js","components/Indentation.js","components/Sofia.js","components/MaTerialDInVerter.js","components/About.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Sidebar","setIsSidebarActive","className","icon","faTimes","onClick","isSidebarActive","activeClassName","exact","to","replace","Header","faBars","ResultExtrapolate","React","memo","bin","exampleBin","inputEl","useRef","htmlFor","name","ref","type","placeholder","value","readOnly","current","select","document","execCommand","AddCreditCard","isCreditCardTwoRequired","extrapolate","useState","creditCardOne","creditCardTwo","inputsValues","setInputsValues","isCreditCardValid","setIsCreditCardValid","handleInputChange","e","property","state","target","onSubmit","preventDefault","match","onChange","required","Basic","setBin","lastTenNumbers","substr","length","Activation","lastSixNumbers","separeteCreditCard","creditCard","endFirstNumbers","firstNumbers","lastNumbers","extrapolateSimilitudeMethod","firstSixNumbersCreditCardOne","remainingNumbersCreditCardOne","remainingNumbersCreditCardTwo","i","charAt","Similitude","Indentation","firstSixNumbers","remainingNumbers","chuck1","chuck2","chuck3","Sofia","getMiddleNumbersGroupThree","substring","result","numOne","numTwo","firstDigitNumOne","Math","trunc","parseInt","secondDigitNumOne","firstDigitNumTwo","secondDigitNumTwo","toString","operateMiddleNumbersCreditCards","firstEightNumbers","MaTerialDInVerter","firstEightNumbersCreditCardTwo","numbersJoined","split","map","number","index","join","binModified","slice","About","App","path","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"mNAKaA,EAAU,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,mBAIvB,OACE,sBAAKC,UAAU,UAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,gBAAgBC,KAAMC,IAASC,QALxC,WACpBJ,GAAmB,SAACK,GAAD,OAAsBA,QAKvC,qBAAIJ,UAAU,gBAAd,UACE,oBAAIA,UAAU,gBAAd,SACE,cAAC,IAAD,CAASA,UAAU,gBAAgBK,gBAAgB,kBAAkBC,OAAK,EAACC,GAAG,IAAIC,SAAO,EAAzF,qBAIF,oBAAIR,UAAU,gBAAd,SACE,cAAC,IAAD,CAASA,UAAU,gBAAgBK,gBAAgB,kBAAkBE,GAAG,cAAcC,SAAO,EAA7F,0BAIF,oBAAIR,UAAU,gBAAd,SACE,cAAC,IAAD,CAASA,UAAU,gBAAgBK,gBAAgB,kBAAkBE,GAAG,cAAcC,SAAO,EAA7F,0BAIF,oBAAIR,UAAU,gBAAd,SACE,cAAC,IAAD,CAASA,UAAU,gBAAgBK,gBAAgB,kBAAkBE,GAAG,eAAeC,SAAO,EAA9F,2BAIF,oBAAIR,UAAU,gBAAd,SACE,cAAC,IAAD,CAASA,UAAU,gBAAgBK,gBAAgB,kBAAkBE,GAAG,SAASC,SAAO,EAAxF,qBAIF,oBAAIR,UAAU,gBAAd,SACE,cAAC,IAAD,CAASA,UAAU,gBAAgBK,gBAAgB,kBAAkBE,GAAG,qBAAqBC,SAAO,EAApG,iCAIF,oBAAIR,UAAU,gBAAd,SACE,cAAC,IAAD,CAASA,UAAU,gBAAgBK,gBAAgB,kBAAkBE,GAAG,SAASC,SAAO,EAAxF,wBAKJ,mBAAGR,UAAU,mBAAb,8EC7COS,EAAS,SAAC,GAA0B,IAAzBV,EAAwB,EAAxBA,mBAKpB,OACI,wBAAQC,UAAU,SAAlB,SACA,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,eAAeC,KAAMS,IAAQP,QAPxC,WACpBJ,GAAmB,SAACK,GAAD,OAAsBA,QAOrC,oBAAIJ,UAAU,gBAAd,gC,eCVGW,EAAoBC,IAAMC,MAAK,YAA0B,IAAvBC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,WAC5CC,EAAUC,iBAAO,MAMvB,OACE,sBAAKjB,UAAU,cAAf,UACE,uBAAOA,UAAU,cAAckB,QAAQ,WAAvC,qBAGA,uBACIlB,UAAU,oBACVmB,KAAK,WACLC,IAAKJ,EACLK,KAAK,OACLC,YAAaP,EACbQ,MAAOT,EACPU,UAAQ,IAEZ,wBAAQxB,UAAU,MAAMG,QAlBA,WAC1Ba,EAAQS,QAAQC,SAChBC,SAASC,YAAY,SAgBnB,yBCpBOC,EAAgB,SAAC,GAKvB,IAJLC,EAII,EAJJA,wBACAC,EAGI,EAHJA,YACAjB,EAEI,EAFJA,IACAC,EACI,EADJA,WACI,EACoCiB,mBAAS,CAC/CC,cAAe,GACfC,cAAe,KAHb,mBACGC,EADH,KACiBC,EADjB,OAM8CJ,oBAAS,GANvD,mBAMGK,EANH,KAMsBC,EANtB,KAQEC,EAAoB,SAACC,EAAGC,GAC5B,IAAIC,EAAK,eAAQP,GACbZ,EAAQiB,EAAEG,OAAOpB,MAAMf,QAAQ,MAAO,IAE1CkC,EAAMD,GAAYlB,EAClBa,EAAgBM,IAuBVT,EAAiCE,EAAjCF,cAAeC,EAAkBC,EAAlBD,cACvB,OACE,sBAAMlC,UAAU,OAAO4C,SAtBJ,SAACJ,GACpBA,EAAEK,iBAEEX,EACyC,OAAvCD,EAAca,MAAM,gBAAkE,OAAvCZ,EAAcY,MAAM,gBACrEf,EAAYI,GACZG,GAAqB,IAErBA,GAAqB,GAGoB,OAAvCL,EAAca,MAAM,gBACtBf,EAAYI,GACZG,GAAqB,IAErBA,GAAqB,IAOzB,SACE,sBAAKtC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,uBAAOA,UAAU,cAAckB,QAAQ,gBAAvC,SACIY,EAA2C,mBAAjB,iBAE9B,uBACE9B,UAAU,oBACVmB,KAAK,gBACLE,KAAK,OACLC,YAAY,mBACZC,MAAOU,EACPc,SAAU,SAACP,GAAD,OAAOD,EAAkBC,EAAG,kBACtCQ,UAAQ,IAETlB,GACC,qCACE,uBAAO9B,UAAU,cAAckB,QAAQ,gBAAvC,8BAGA,uBACElB,UAAU,oBACVmB,KAAK,gBACLE,KAAK,OACLC,YAAY,mBACZC,MAAOW,EACPa,SAAU,SAACP,GAAD,OAAOD,EAAkBC,EAAG,kBACtCQ,UAAQ,OAId,uBAAOhD,UAAU,MAAMqB,KAAK,SAASE,MAAM,mBAE5Cc,GAAqB,mBAAGrC,UAAU,cAAb,yEACtB,cAACW,EAAD,CAAmBG,IAAKA,EAAKC,WAAYA,UC9EpCkC,EAAQrC,IAAMC,MAAK,WAAO,IAAD,EACdmB,mBAAS,IADK,mBAC7BlB,EAD6B,KACxBoC,EADwB,KASpC,OACE,gCACE,uCACA,cAAC,EAAD,CACEpB,yBAAyB,EACzBC,YAXc,SAAC,GAAuB,IAArBE,EAAoB,EAApBA,cACfkB,EAAiBlB,EAAcmB,OAAOnB,EAAcoB,OAAS,IAC7DvC,EAAMmB,EAAczB,QAAQ2C,EAAgB,cAClDD,EAAOpC,IASHA,IAAKA,EACLC,WAAW,2BChBNuC,EAAa1C,IAAMC,MAAK,WAAO,IAAD,EACnBmB,mBAAS,IADU,mBAClClB,EADkC,KAC7BoC,EAD6B,KAUzC,OACE,gCACE,4CACA,cAAC,EAAD,CAAepB,yBAAyB,EAAOC,YAV/B,SAAC,GAAqB,IAApBE,EAAmB,EAAnBA,cACdsB,EAAiBtB,EAAcmB,OAAOnB,EAAcoB,OAAS,GAC7DvC,EAAMmB,EAAczB,QAAQ+C,EAAgB,UAClDL,EAAOpC,IAOsEA,IAAKA,EAAKC,WAAW,2BChBzFyC,EAAqB,SAACC,EAAYC,GAC7C,IAAMC,EAAeF,EAAWL,OAAO,EAAGM,GACpCE,EAAcH,EAAWJ,OAASK,EAExC,MAAO,CAACC,EADiBF,EAAWL,OAAOO,EAAaN,OAAQO,KCDrDC,EAA8B,SAAC5B,EAAeC,GAYvD,IAZ0E,IAAD,EAIrEsB,EAAmBvB,EAAc,GAJoC,mBAEvE6B,EAFuE,KAGvEC,EAHuE,OAQrEP,EAAmBtB,EAAc,GADnC8B,EAPuE,oBAUrElD,EAAM,GAEDmD,EAAI,EAAGA,EAAIF,EAA8BV,OAAQY,IAEtDF,EAA8BG,OAAOD,KACrCD,EAA8BE,OAAOD,GAErCnD,GAAO,IAEPA,GAAOiD,EAA8BG,OAAOD,GAGhD,OAAOH,EAA+BhD,GCpB7BqD,EAAavD,IAAMC,MAAK,WAAO,IAAD,EACnBmB,mBAAS,IADU,mBAClClB,EADkC,KAC7BoC,EAD6B,KAQzC,OACE,gCACE,4CACA,cAAC,EAAD,CAAepB,yBAAyB,EAAMC,YAR9B,SAAC,GAAsC,IAApCE,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAC9BpB,EAAM+C,EAA4B5B,EAAeC,GACvDgB,EAAOpC,IAMmEA,IAAKA,EAAKC,WAAW,2BCXtFqD,EAAcxD,IAAMC,MAAK,WAAO,IAAD,EACpBmB,mBAAS,IADW,mBACnClB,EADmC,KAC9BoC,EAD8B,KAgC1C,OACE,gCACE,6CACA,cAAC,EAAD,CAAepB,yBAAyB,EAAOC,YAhC/B,SAAC,GAQnB,IARwC,IAApBE,EAAmB,EAAnBA,cAAmB,EAEKuB,EAAmBvB,EAAc,GAFtC,mBAEhCoC,EAFgC,KAEfC,EAFe,KAInCC,EAAS,GACTC,EAAS,GACTC,EAAS,GAEJR,EAAI,EAAGA,EAAIK,EAAiBjB,OAAQY,IACvCM,EAAOlB,OAAS,EAAI,EACtBkB,EAAOlB,OAAS,IAAM,EACjBkB,GAAU,IACVA,GAAUD,EAAiBJ,OAAOD,GAC9BO,EAAOnB,OAAS,EAAI,EAC7BmB,EAAOnB,OAAS,IAAM,GAAKmB,EAAOnB,OAAS,IAAM,EAC5CmB,GAAU,IACVA,GAAUF,EAAiBJ,OAAOD,GAC9BQ,EAAOpB,OAAS,EAAI,IAC7BoB,EAAOpB,OAAS,IAAM,EACjBoB,GAAU,IACVA,GAAUH,EAAiBJ,OAAOD,IAM3Cf,EAFYmB,EAAkBE,EAASC,EAASC,IAQ6B3D,IAAKA,EAAKC,WAAW,2BCpCzF2D,EAAQ9D,IAAMC,MAAK,WAAO,IAAD,EAEZmB,mBAAS,IAFG,mBAE3BlB,EAF2B,KAEtBoC,EAFsB,KAI5ByB,EAA6B,SAAClB,GAKhC,OAJgCA,EAAWmB,UACzCnB,EAAWJ,OAAS,EAAI,EACxBI,EAAWJ,OAAS,EAAI,IA+B9B,OACI,gCACI,uCACA,cAAC,EAAD,CAAevB,yBAAyB,EAAMC,YAjBlC,SAAC,GAAoC,IAAnCE,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,cAI3B2C,EAhB8B,SAACC,EAAQC,GAC7C,IAAMC,EAAmBC,KAAKC,MAAMC,SAASL,GAAU,IACjDM,EAAoBD,SAASL,GAAU,GACvCO,EAAmBJ,KAAKC,MAAMC,SAASJ,GAAU,IACjDO,EAAoBH,SAASJ,GAAU,GAK7C,OAHgBE,KAAKC,OAAQF,EAAmBI,GAAqB,EAAK,GAC1DH,KAAKC,OAAQG,EAAmBC,GAAqB,EAAK,IAE/DC,WAOIC,CAHoBb,EAA2B1C,GAC3B0C,EAA2BzC,IAOxDuD,EAAoBxD,EAAcmB,OAAO,EAAG,GAElDF,EAAOuC,EAAoBZ,EAAS,WAMwC/D,IAAKA,EAAKC,WAAW,2BCvC5F2E,EAAoB9E,IAAMC,MAAK,WAAO,IAAD,EAC1BmB,mBAAS,IADiB,mBACzClB,EADyC,KACpCoC,EADoC,KAiChD,OACE,gCACE,mDACA,cAAC,EAAD,CAAepB,yBAAyB,EAAMC,YAjC9B,SAAC,GAAsC,IAApCE,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAAoB,EAIpDsB,EAAmBtB,EAAe,GAJkB,mBAEtDyD,EAFsD,KAGtD3B,EAHsD,KAelD4B,EATgCD,EACnCE,MAAM,IACNC,KAAI,SAACC,EAAQC,GACZ,OACEb,SAASY,GACTZ,SAASnB,EAA8BE,OAAO8B,OAIAC,KAAK,IAAI7C,OAAO,EAAG,GAEjEtC,EAAM+C,EAA4B5B,EADZ0D,EAAiCC,GAEzDM,EAAc,GAEiB,MAA/BpF,EAAIsC,OAAOtC,EAAIuC,OAAS,IAC1B6C,EAAcpF,EAAIqF,MAAM,GAAI,GAAK,IACjCjD,EAAOgD,IAGPhD,EAAOpC,IAQiEA,IAAKA,EAAKC,WAAW,2BCvCtFqF,EAAQ,WACjB,OACI,gCACI,uCACA,sBAAKpG,UAAU,iBAAf,UACI,+JACA,2M,MCyCDqG,MAnCf,WAAgB,IAAD,EACiCrE,oBAAS,GAD1C,mBACN5B,EADM,KACWL,EADX,KAEb,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQA,mBAAoBA,IAC3BK,GAAmB,cAAC,EAAD,CAASL,mBAAoBA,IAEjD,eAAC,IAAD,WACE,cAAC,IAAD,CAAOO,OAAK,EAACgG,KAAK,IAAlB,SACE,cAACrD,EAAD,MAEF,cAAC,IAAD,CAAOqD,KAAK,cAAZ,SACE,cAAChD,EAAD,MAEF,cAAC,IAAD,CAAOgD,KAAK,cAAZ,SACE,cAACnC,EAAD,MAEF,cAAC,IAAD,CAAOmC,KAAK,eAAZ,SACE,cAAClC,EAAD,MAEF,cAAC,IAAD,CAAOkC,KAAK,SAAZ,SACE,cAAC5B,EAAD,MAEF,cAAC,IAAD,CAAO4B,KAAK,qBAAZ,SACE,cAACZ,EAAD,MAEF,cAAC,IAAD,CAAOY,KAAK,SAAZ,SACE,cAAC,EAAD,aC7BJC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7D,MAAM,2DAqCnC,SAAS8D,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3E,QACfqE,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,+GAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MCzFjEC,IAASC,OAAO,cAAC,EAAD,IAASrG,SAASsG,eAAe,SDe1C,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,gBAAwB1B,OAAOC,SAAS0B,MACpDC,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,QAAQ,WAC9B,IAAMzB,EAAK,UAAMsB,gBAAN,sBAEP5B,IAgEV,SAAiCM,EAAOC,GAEtCyB,MAAM1B,EAAO,CACX2B,QAAS,CAAE,iBAAkB,YAE5BtB,MAAK,SAACuB,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C9B,UAAUC,cAAc8B,MAAM5B,MAAK,SAACC,GAClCA,EAAa4B,aAAa7B,MAAK,WAC7BT,OAAOC,SAASsC,eAKpBpC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IAAI,oEAtFVuB,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAM5B,MAAK,WACjCO,QAAQC,IACN,+GAMJd,EAAgBC,EAAOC,OCzC/BoC,K","file":"static/js/main.dc610df1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const Sidebar = ({setIsSidebarActive}) => {\r\n  const toggleSidebar = () => {\r\n    setIsSidebarActive((isSidebarActive) => !isSidebarActive);\r\n  };\r\n  return (\r\n    <nav className=\"sidebar\">\r\n      <FontAwesomeIcon className=\"sidebar__icon\" icon={faTimes} onClick={toggleSidebar} />\r\n      <ul className=\"sidebar__list\">\r\n        <li className=\"sidebar__item\">\r\n          <NavLink className=\"sidebar__link\" activeClassName=\"sidebar__active\" exact to=\"/\" replace>\r\n            Basic\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"sidebar__item\">\r\n          <NavLink className=\"sidebar__link\" activeClassName=\"sidebar__active\" to=\"/activation\" replace>\r\n            Activation\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"sidebar__item\">\r\n          <NavLink className=\"sidebar__link\" activeClassName=\"sidebar__active\" to=\"/similitude\" replace>\r\n            Similitude\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"sidebar__item\">\r\n          <NavLink className=\"sidebar__link\" activeClassName=\"sidebar__active\" to=\"/indentation\" replace>\r\n            Indentation\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"sidebar__item\">\r\n          <NavLink className=\"sidebar__link\" activeClassName=\"sidebar__active\" to=\"/sofia\" replace>\r\n            SoFIA\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"sidebar__item\">\r\n          <NavLink className=\"sidebar__link\" activeClassName=\"sidebar__active\" to=\"/maTerialDInVerter\" replace>\r\n            MaTerialDInVerter\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"sidebar__item\">\r\n          <NavLink className=\"sidebar__link\" activeClassName=\"sidebar__active\" to=\"/about\" replace>\r\n            About\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n      <p className=\"sidebar__creator\">© Copyright 2021, Juan Sebastián. All rights reserved.</p>\r\n    </nav>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const Header = ({setIsSidebarActive}) => {\r\n    const toggleSidebar = () => {\r\n      setIsSidebarActive((isSidebarActive) => !isSidebarActive);\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n        <div className=\"header__content\">\r\n          <FontAwesomeIcon className=\"header__icon\" icon={faBars} onClick={toggleSidebar} />\r\n          <h1 className=\"header__title\" >Extrapolator</h1>\r\n        </div>\r\n      </header>\r\n    )\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ResultExtrapolate = React.memo(({ bin, exampleBin }) => {\r\n  const inputEl = useRef(null);\r\n\r\n  const copyCodeToClipboard = () => {\r\n    inputEl.current.select();\r\n    document.execCommand(\"copy\");\r\n  };\r\n  return (\r\n    <div className=\"form__group\">\r\n      <label className=\"form__label\" htmlFor=\"inputBin\">\r\n        Result:\r\n      </label>\r\n      <input       \r\n          className=\"form__input--text\"\r\n          name=\"inputBin\"\r\n          ref={inputEl}\r\n          type=\"text\"\r\n          placeholder={exampleBin}\r\n          value={bin}\r\n          readOnly\r\n        />\r\n      <button className=\"btn\" onClick={copyCodeToClipboard}>Copy!</button>\r\n    </div>\r\n  );\r\n});\r\n\r\nResultExtrapolate.propTypes = {\r\n  bin: PropTypes.string.isRequired,\r\n  exampleBin: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ResultExtrapolate } from \"./ResultExtrapolate\";\r\n\r\nexport const AddCreditCard = ({\r\n  isCreditCardTwoRequired,\r\n  extrapolate,\r\n  bin,\r\n  exampleBin,\r\n}) => {\r\n  const [inputsValues, setInputsValues] = useState({\r\n    creditCardOne: \"\",\r\n    creditCardTwo: \"\",\r\n  });\r\n\r\n  const [isCreditCardValid, setIsCreditCardValid] = useState(false);\r\n\r\n  const handleInputChange = (e, property) => {\r\n    let state = { ...inputsValues };\r\n    let value = e.target.value.replace(/\\s/g, \"\");\r\n\r\n    state[property] = value;\r\n    setInputsValues(state);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (creditCardTwo) {\r\n      if (creditCardOne.match(\"^[0-9]{16}$\") !== null && creditCardTwo.match(\"^[0-9]{16}$\") !== null) {\r\n        extrapolate(inputsValues);\r\n        setIsCreditCardValid(false);\r\n      }else{\r\n        setIsCreditCardValid(true);\r\n      }\r\n    } else {\r\n      if (creditCardOne.match(\"^[0-9]{16}$\") !== null) {\r\n        extrapolate(inputsValues);\r\n        setIsCreditCardValid(false);\r\n      }else{\r\n        setIsCreditCardValid(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const { creditCardOne, creditCardTwo } = inputsValues;\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <div className=\"wrapper\">\r\n        <div className=\"form__group\">\r\n          <label className=\"form__label\" htmlFor=\"creditCardOne\">\r\n            {!isCreditCardTwoRequired ? \"Credit Card:\" : \"Credit Card One:\"}\r\n          </label>\r\n          <input\r\n            className=\"form__input--text\"\r\n            name=\"creditCardOne\"\r\n            type=\"text\"\r\n            placeholder=\"4915110176928790\"\r\n            value={creditCardOne}\r\n            onChange={(e) => handleInputChange(e, \"creditCardOne\")}\r\n            required\r\n          />\r\n          {isCreditCardTwoRequired && (\r\n            <>\r\n              <label className=\"form__label\" htmlFor=\"creditCardTwo\">\r\n                Credit Card Two:\r\n              </label>\r\n              <input\r\n                className=\"form__input--text\"\r\n                name=\"creditCardTwo\"\r\n                type=\"text\"\r\n                placeholder=\"4915110191768499\"\r\n                value={creditCardTwo}\r\n                onChange={(e) => handleInputChange(e, \"creditCardTwo\")}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n          <input className=\"btn\" type=\"submit\" value=\"Extrapolate\" />\r\n        </div>\r\n        {isCreditCardValid && <p className=\"form__error\">The data you entered is invalid, please enter it correctly.</p>}\r\n        <ResultExtrapolate bin={bin} exampleBin={exampleBin} />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCreditCard.propTypes = {\r\n  isCreditCardTwoRequired: PropTypes.bool.isRequired,\r\n  extrapolate: PropTypes.func.isRequired,\r\n};\r\n","import React, {useState} from \"react\";\r\nimport { AddCreditCard } from \"./AddCreditCard\";\r\n\r\nexport const Basic = React.memo(() => {\r\n  const [bin, setBin] = useState(\"\");\r\n\r\n  const extrapolate = ({ creditCardOne }) => {\r\n    const lastTenNumbers = creditCardOne.substr(creditCardOne.length - 10);\r\n    const bin = creditCardOne.replace(lastTenNumbers, \"xxxxxxxxxx\");\r\n    setBin(bin);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Basic</h2>\r\n      <AddCreditCard\r\n        isCreditCardTwoRequired={false}\r\n        extrapolate={extrapolate}\r\n        bin={bin} \r\n        exampleBin=\"491511xxxxxxxxxx\"\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","import React, {useState} from \"react\";\r\nimport { AddCreditCard } from \"./AddCreditCard\";\r\n\r\nexport const Activation = React.memo(() => {\r\n  const [bin, setBin] = useState('');\r\n  \r\n  const extrapolate = ({creditCardOne}) => {\r\n    const lastSixNumbers = creditCardOne.substr(creditCardOne.length - 6);\r\n    const bin = creditCardOne.replace(lastSixNumbers, \"xxxxxx\");\r\n    setBin(bin);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Activation</h2>\r\n      <AddCreditCard isCreditCardTwoRequired={false} extrapolate = {extrapolate} bin={bin} exampleBin=\"4915110176xxxxxx\"/>\r\n    </div>\r\n  );\r\n});\r\n","export const separeteCreditCard = (creditCard, endFirstNumbers) => {\r\n  const firstNumbers = creditCard.substr(0, endFirstNumbers);\r\n  const lastNumbers = creditCard.length - endFirstNumbers;\r\n  const remainingNumbers = creditCard.substr(firstNumbers.length, lastNumbers);\r\n  return [firstNumbers, remainingNumbers];\r\n};\r\n","import {separeteCreditCard} from './separateCreditCard';\r\n\r\nexport const extrapolateSimilitudeMethod = (creditCardOne, creditCardTwo) => {\r\n    const [\r\n      firstSixNumbersCreditCardOne,\r\n      remainingNumbersCreditCardOne,\r\n    ] = separeteCreditCard(creditCardOne,6);\r\n    const [\r\n      ,\r\n      remainingNumbersCreditCardTwo,\r\n    ] = separeteCreditCard(creditCardTwo,6);\r\n\r\n    let bin = \"\";\r\n\r\n    for (let i = 0; i < remainingNumbersCreditCardOne.length; i++) {\r\n      if (\r\n        remainingNumbersCreditCardOne.charAt(i) !==\r\n        remainingNumbersCreditCardTwo.charAt(i)\r\n      ) {\r\n        bin += \"x\";\r\n      } else {\r\n        bin += remainingNumbersCreditCardOne.charAt(i);\r\n      }\r\n    }\r\n    return firstSixNumbersCreditCardOne + bin;\r\n  };","import React, { useState } from \"react\";\r\nimport { extrapolateSimilitudeMethod } from \"../helpers/similitude\";\r\nimport { AddCreditCard } from \"./AddCreditCard\";\r\n\r\nexport const Similitude = React.memo(() => {\r\n  const [bin, setBin] = useState(\"\");\r\n\r\n  const extrapolate = ({ creditCardOne, creditCardTwo }) => {\r\n    const bin = extrapolateSimilitudeMethod(creditCardOne, creditCardTwo);\r\n    setBin(bin);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Similitude</h2>\r\n      <AddCreditCard isCreditCardTwoRequired={true} extrapolate={extrapolate} bin={bin} exampleBin=\"49151101xxxx8x9x\"/>\r\n    </div>\r\n  );\r\n});\r\n","import React, {useState} from \"react\";\r\nimport { separeteCreditCard } from \"../helpers/separateCreditCard\";\r\nimport { AddCreditCard } from \"./AddCreditCard\";\r\n\r\nexport const Indentation = React.memo(() => {\r\n  const [bin, setBin] = useState('');\r\n\r\n  const extrapolate = ({creditCardOne}) => {\r\n    \r\n    const [firstSixNumbers, remainingNumbers] = separeteCreditCard(creditCardOne,6);\r\n\r\n    let chuck1 = \"\";\r\n    let chuck2 = \"\";\r\n    let chuck3 = \"\";\r\n\r\n    for (let i = 0; i < remainingNumbers.length; i++) {\r\n      if (chuck1.length - 1 < 2) {\r\n        chuck1.length - 1 === 0\r\n          ? (chuck1 += \"x\")\r\n          : (chuck1 += remainingNumbers.charAt(i));\r\n      } else if (chuck2.length - 1 < 3) {\r\n        chuck2.length - 1 === 0 || chuck2.length - 1 === 1\r\n          ? (chuck2 += \"x\")\r\n          : (chuck2 += remainingNumbers.charAt(i));\r\n      } else if (chuck3.length - 1 < 2) {\r\n        chuck3.length - 1 === 0\r\n          ? (chuck3 += \"x\")\r\n          : (chuck3 += remainingNumbers.charAt(i));\r\n      }\r\n    }\r\n\r\n    const bin = firstSixNumbers + chuck1 + chuck2 + chuck3;\r\n\r\n    setBin(bin);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Indentation</h2>\r\n      <AddCreditCard isCreditCardTwoRequired={false} extrapolate = {extrapolate} bin={bin} exampleBin=\"4915110x76xx87x0\" />\r\n    </div>\r\n  );\r\n});\r\n","import React, {useState} from 'react'\r\nimport { AddCreditCard } from './AddCreditCard'\r\n\r\nexport const Sofia = React.memo(() => {\r\n\r\n    const [bin, setBin] = useState(\"\");\r\n\r\n    const getMiddleNumbersGroupThree = (creditCard) => {\r\n        const middleNumbersGroupThree = creditCard.substring(\r\n          creditCard.length / 2 + 1,\r\n          creditCard.length / 2 + 3\r\n        );\r\n        return middleNumbersGroupThree;\r\n    };\r\n\r\n    const operateMiddleNumbersCreditCards = (numOne, numTwo) => {\r\n        const firstDigitNumOne = Math.trunc(parseInt(numOne) / 10);\r\n        const secondDigitNumOne = parseInt(numOne) % 10;\r\n        const firstDigitNumTwo = Math.trunc(parseInt(numTwo) / 10);\r\n        const secondDigitNumTwo = parseInt(numTwo) % 10;\r\n      \r\n        const result1 = Math.trunc(((firstDigitNumOne + secondDigitNumOne) / 2) * 5);\r\n        const result2 = Math.trunc(((firstDigitNumTwo + secondDigitNumTwo) / 2) * 5);\r\n        const sum = result1 + result2;\r\n        return sum.toString();\r\n    };\r\n\r\n    const extrapolate = ({creditCardOne, creditCardTwo}) => {\r\n        const middleNumbersCreditCardOne = getMiddleNumbersGroupThree(creditCardOne);\r\n        const middleNumbersCreditCardTwo = getMiddleNumbersGroupThree(creditCardTwo);\r\n\r\n        const result = operateMiddleNumbersCreditCards(\r\n          middleNumbersCreditCardOne,\r\n          middleNumbersCreditCardTwo\r\n        );\r\n\r\n        const firstEightNumbers = creditCardOne.substr(0, 8);\r\n      \r\n        setBin(firstEightNumbers + result + \"xxxxxx\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>SoFIA</h2>\r\n            <AddCreditCard isCreditCardTwoRequired={true} extrapolate={extrapolate} bin={bin} exampleBin=\"4915110157xxxxxx\" />\r\n        </div>\r\n    )\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { AddCreditCard } from \"./AddCreditCard\";\r\nimport { separeteCreditCard } from \"../helpers/separateCreditCard\";\r\nimport { extrapolateSimilitudeMethod } from \"../helpers/similitude\";\r\n\r\nexport const MaTerialDInVerter = React.memo(() => {\r\n  const [bin, setBin] = useState(\"\");\r\n\r\n  const extrapolate = ({ creditCardOne, creditCardTwo }) => {\r\n    const [\r\n      firstEightNumbersCreditCardTwo,\r\n      remainingNumbersCreditCardTwo,\r\n    ] = separeteCreditCard(creditCardTwo, 8);\r\n\r\n    const multDigitByDigitCreditCardTwo = firstEightNumbersCreditCardTwo\r\n      .split(\"\")\r\n      .map((number, index) => {\r\n        return (\r\n          parseInt(number) *\r\n          parseInt(remainingNumbersCreditCardTwo.charAt(index))\r\n        );\r\n      });\r\n\r\n    const numbersJoined = multDigitByDigitCreditCardTwo.join(\"\").substr(0, 8);\r\n    const remainingCreditCard = firstEightNumbersCreditCardTwo + numbersJoined;\r\n    const bin = extrapolateSimilitudeMethod(creditCardOne, remainingCreditCard);\r\n    let binModified = \"\";\r\n\r\n    if (bin.substr(bin.length - 1) === \"x\") {\r\n      binModified = bin.slice(0, -1) + \"1\";\r\n      setBin(binModified);\r\n      \r\n    }else{\r\n      setBin(bin);\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>MaTerialDInVerter</h2>\r\n      <AddCreditCard isCreditCardTwoRequired={true} extrapolate={extrapolate} bin={bin} exampleBin=\"49151101x69xxxx1\" />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div>\r\n            <h2>About</h2>\r\n            <div className=\"text-container\">\r\n                <p>This page recreates algorithms that are free on the Internet for testing purposes in the field of programming and development.</p>\r\n                <p>Our services are intended for development, programming and educational purposes only. We do not support, promote or encourage illegal/fraud activities of any kind.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Sidebar } from \"./components/Sidebar\";\r\nimport { Header } from \"./components/Header\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n//Components\r\nimport { Basic } from \"./components/Basic\";\r\nimport { Activation } from \"./components/Activation\";\r\nimport { Similitude } from \"./components/Similutude\";\r\nimport { Indentation } from \"./components/Indentation\";\r\nimport { Sofia } from \"./components/Sofia\";\r\nimport { MaTerialDInVerter } from \"./components/MaTerialDInVerter\";\r\nimport { About } from \"./components/About\";\r\nimport \"./scss/styles.scss\";\r\n\r\nfunction App() {\r\n  const [isSidebarActive, setIsSidebarActive] = useState(false);\r\n  return (\r\n    <Router>\r\n      <Header setIsSidebarActive={setIsSidebarActive} />\r\n      {isSidebarActive && <Sidebar setIsSidebarActive={setIsSidebarActive} />}\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Basic />\r\n        </Route>\r\n        <Route path=\"/activation\">\r\n          <Activation />\r\n        </Route>\r\n        <Route path=\"/similitude\">\r\n          <Similitude />\r\n        </Route>\r\n        <Route path=\"/indentation\">\r\n          <Indentation />\r\n        </Route>\r\n        <Route path=\"/sofia\">\r\n          <Sofia />\r\n        </Route>\r\n        <Route path=\"/maTerialDInVerter\">\r\n          <MaTerialDInVerter />\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          <About />\r\n        </Route>\r\n      </Switch>\r\n\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorkerRegistration.register();\r\n\r\n"],"sourceRoot":""}